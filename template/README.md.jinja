{% if ci == 'github' %}[![Lint and Test]({{ repository_url }}actions/workflows/test.yml/badge.svg)]({{ repository_url }}actions)
{% endif %}
# {{ name }}

{{ description }}.

## üöÄ Using

{% if use_app %}*Prerequisite*: the following command needs to be executed inside a DevContainer. See [Contributing section](#-contributing) to get started.

To serve this app, run:
```bash
poe serve --dev
```
and open [localhost:8000](https://localhost:8000) in your browser.
{% else %}To install this package, run:
```bash
pip install {{ package_slug }}
```
{% endif %}

## üßë‚Äçüíª Contributing

<details>
<summary>Prerequisites</summary>

<details>
<summary>1. Install Docker</summary>

1. Go to [Docker](https://www.docker.com/get-started), download and install docker.
2. [Configure Docker to use the BuildKit build system](https://docs.docker.com/build/buildkit/#getting-started). On macOS and Windows, BuildKit is enabled by default in Docker Desktop.

</details>

<details>
<summary>2. Install VS Code</summary>

Go to [VS Code](https://code.visualstudio.com/), download and install VS Code.
</details>

{% if use_private_package_repository %}<details>
<summary>3. Configure Poetry to use the private package repository</summary>

[Create a personal access token](https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html#create-a-personal-access-token) with the `api` scope and use it to [add your private package repository credentials to your Poetry's `auth.toml` file](https://python-poetry.org/docs/repositories/#configuring-credentials):

```toml
# Locations of the auth.toml file:
# macOS:   ~/Library/Application Support/pypoetry/auth.toml
# Linux:   ~/.config/pypoetry/auth.toml
[http-basic.{{ private_package_repository_name }}]
username = "{personal access token name}"
password = "{personal access token}"
```
</details>

<details>
<summary>4. Link Poetry & Docker Compose</summary>

Export the location of your private package repository credentials so that Docker Compose can load these as a [build and run time secret](https://docs.docker.com/compose/compose-file/compose-file-v3/#secrets-configuration-reference):

```sh
# Locations of the auth.toml file:
# macOS:   ~/Library/Application Support/pypoetry/auth.toml
# Linux:   ~/.config/pypoetry/auth.toml
cat << EOF >> ~/.bashrc
export POETRY_AUTH_TOML_PATH="~/.config/pypoetry/auth.toml"
EOF
```
</details>{% endif %}
</details>

#### 1. Open DevContainer with VS Code
Open this repository with VS Code, and run <kbd>Ctrl/‚åò</kbd> + <kbd>‚áß</kbd> + <kbd>P</kbd> ‚Üí _Dev Containers: Reopen in Container_.

The following commands can be used inside a DevContainer.

#### 2. Run linters
```bash
poe lint
```

#### 3. Run tests
```bash
poe test
```

#### 4. Update poetry lock file
```bash
poetry lock --no-update
```

---
See how to develop with [PyCharm or any other IDE](https://github.com/lukin0110/poetry-copier/tree/main/docs/ide.md).

---
Ô∏è‚ö°Ô∏è Scaffolded with [Poetry Copier](https://github.com/lukin0110/poetry-copier/).\
üõ†Ô∏è [Open an issue](https://github.com/lukin0110/poetry-copier/issues/new) if you have any questions or suggestions.
